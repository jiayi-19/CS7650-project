# -*- coding: utf-8 -*-
"""checking model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RwDfm94Xn1TWJh1IR48zJ-oIW5ANPX9I
"""

import random
from openai import OpenAI
import json


def output_verifier(
    prompt: str,
    response_a: str,
    response_b: str,
    evaluator_model: str = "gpt-4o-mini"
) -> dict:
    """
    Returns a dict with exactly these keys:
      - consistent: "Yes" or "No"
      - consistent_reason: explanation why A and B are consistent/inconsistent
      - better_model: "A" or "B" (only if consistent == "Yes")
      - better_model_reason: explanation why that response is better (only if consistent == "Yes")
    """
    system_instructions = """
You are a medical expert evaluator. Do not output any extra fields.
"""
    user_instructions = f"""

Prompt:
{prompt}

Response A:
{response_a}

Response B:
{response_b}

Please reply with **only** a JSON object matching this schema:

{{
  "consistent": "<Yes or No>",
  "consistent_reason": "<brief explanation of why the responses are consistent or not>",
  // If "consistent" == "Yes", ALSO include:
  "better_model": "<A or B>",
  "better_model_reason": "<brief explanation why that response is better>"
}}
"""
    client = OpenAI(
        base_url="https://api.openai.com/v1",
        api_key= "sk-lQa8WYxoPgfFxoPs-Oqf6_VDr4jcVcQbKYbZDl8N-JT3BlbkFJL8-B3Ivu0QkSjWSrlLTU5_undnDZsEtrMGVVUEtO8A"
    )
    completion = client.chat.completions.create(
        model=evaluator_model,
        messages=[
            {"role": "system", "content": system_instructions},
            {"role": "user",   "content": user_instructions}
        ],
        temperature=0.0
    )
    text = completion.choices[0].message.content.strip()


    try:
        result = json.loads(text)
    except json.JSONDecodeError:
        result = {
            "consistent": None,
            "consistent_reason": text,
        }
    return result







